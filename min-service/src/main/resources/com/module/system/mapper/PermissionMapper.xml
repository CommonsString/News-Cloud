<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.module.system.mapper.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.module.system.domain.Permission">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, alias, create_time, name, pid
  </sql>

  <!--返回集合-->
  <select id="selectByIdReturnList" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <!--返回pid-->
  <select id="findByPid" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from permission
    where pid = #{pid,jdbcType=INTEGER}
  </select>

  <!--根据名称, 返回所有-->
  <select id="findByNameAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from permission
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <!--返回实体-->
  <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from permission
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <!--自动生成-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.module.system.domain.Permission">
    insert into permission (id, alias, create_time, 
      name, pid)
    values (#{id,jdbcType=BIGINT}, #{alias,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.module.system.domain.Permission">
    <!--插入后返回主键-->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select LAST_INSERT_ID()
    </selectKey>
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pid != null">
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.module.system.domain.Permission">
    update permission
    <set>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.module.system.domain.Permission">
    update permission
    set alias = #{alias,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>